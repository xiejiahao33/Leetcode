package 分治;



/**
 * 描述
 * 这个题目说的是，给你一棵不为空的二叉树，你要计算出这棵二叉树中的最大路径和。
 *
 * 对于二叉树中任意两个节点，路径指的是从其中一个节点出发，经过它们的最近公共祖先，
 * 然后到达另一个节点的节点序列。另外，单个节点也算一条路径。注意，路径不一定会经过原始二叉树的根节点。
 *
 * 比如说，给你的二叉树是：
 *
 *      -4
 *     /  \
 *    1    2
 *   / \
 *  4   8
 *
 * 这棵二叉树中，最大路径和是 13。对应的路径是 4 -> 1 -> 8。
 *
 * 再比如说给你的二叉树是：
 *
 *     1
 *   /   \
 *  -2   -4
 *
 * 这棵二叉树中，最大路径和是 1。对应的路径只有一个节点 1。
 */
public class _二叉树的最大路径和 {

    public int maxPathSum(TreeNode root) {


        return 0;
    }

}
